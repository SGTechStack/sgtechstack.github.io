"use strict";(self.webpackChunkeds_library_documentation=self.webpackChunkeds_library_documentation||[]).push([[115],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,k=m["".concat(p,".").concat(d)]||m[d]||c[d]||i;return n?a.createElement(k,l(l({ref:t},s),{},{components:n})):a.createElement(k,l({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3649:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:1},l="usePaginationQuery",o={unversionedId:"packages/pagination/api-reference/usePaginationQuery",id:"packages/pagination/api-reference/usePaginationQuery",title:"usePaginationQuery",description:"Options",source:"@site/docs/packages/pagination/api-reference/usePaginationQuery.md",sourceDirName:"packages/pagination/api-reference",slug:"/packages/pagination/api-reference/usePaginationQuery",permalink:"/docs/packages/pagination/api-reference/usePaginationQuery",draft:!1,editUrl:"https://github.com/SGTechStack/sgtechstack.github.io/tree/source/eds-library-documentation/docs/packages/pagination/api-reference/usePaginationQuery.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"API Reference",permalink:"/docs/category/api-reference"},next:{title:"useInfinitePaginationQuery",permalink:"/docs/packages/pagination/api-reference/useInfinitePaginationQuery"}},p={},u=[],s={toc:u},m="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"usepaginationquery"},"usePaginationQuery"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"const { \n    isLoading,\n    isError,\n    isSuccess,\n    status,\n    error,\n    data,\n    refetch,\n    isFetching\n} = usePaginatedQuery<T>({\n    path,\n    page,\n    size,\n    sort,\n    staleTime,\n    gcTime\n}, axiosConfig)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Options")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"url: String"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Required")),(0,r.kt)("li",{parentName:"ul"},"The server URL that will be used for the request"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"page: number"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Required")),(0,r.kt)("li",{parentName:"ul"},"0 indexed"),(0,r.kt)("li",{parentName:"ul"},"Defaults to 0"),(0,r.kt)("li",{parentName:"ul"},"The page number to access"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"size: number"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Required")),(0,r.kt)("li",{parentName:"ul"},"Defaults to 20"),(0,r.kt)("li",{parentName:"ul"},"The page size requested"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sort: String"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Optional")),(0,r.kt)("li",{parentName:"ul"},"A collection of sort directives in the format ",(0,r.kt)("inlineCode",{parentName:"li"},"($propertyname,)+[asc|desc]?.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"staleTime: number | Infinity"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Optional")),(0,r.kt)("li",{parentName:"ul"},"Defaults to 0"),(0,r.kt)("li",{parentName:"ul"},"The time in milliseconds after data is considered stale. This value only applies to the hook it is defined on."),(0,r.kt)("li",{parentName:"ul"},"If set to Infinity, the data will never be considered stale"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gcTime: number | Infinity"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Optional")),(0,r.kt)("li",{parentName:"ul"},"Defaults to 5 ",(0,r.kt)("em",{parentName:"li"}," 60 ")," 1000 (5 minutes) or Infinity during SSR"),(0,r.kt)("li",{parentName:"ul"},"The time in milliseconds that unused/inactive cache data remains in memory. When a query's cache becomes unused or inactive, that cache data will be garbage collected after this duration. When different garbage collection times are specified, the longest one will be used."),(0,r.kt)("li",{parentName:"ul"},"If set to Infinity, will disable garbage collection"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"axiosConfig: AxiosRequestConfig"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Optional"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isLoading: boolean"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Is ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," whenever the first fetch for a query is in-flight"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isSuccess: boolean"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A derived boolean from the ",(0,r.kt)("inlineCode",{parentName:"li"},"status")," variable, provided for convenience."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"status: String"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Will be:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pending")," if there's no cached data and no query attempt was finished yet."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"error")," if the query attempt resulted in an error. The corresponding error property has the error received from the attempted fetch"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"success")," if the query has received a response with no errors and is ready to display its data. The corresponding data property on the query is the ",(0,r.kt)("inlineCode",{parentName:"li"},"data")," received from the successful fetch or if the query's ",(0,r.kt)("inlineCode",{parentName:"li"},"enabled")," property is set to ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," and has not been fetched yet ",(0,r.kt)("inlineCode",{parentName:"li"},"data")," is the first ",(0,r.kt)("inlineCode",{parentName:"li"},"initialData")," supplied to the query on initialization."))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data: TData"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"undefined")),(0,r.kt)("li",{parentName:"ul"},"The last successfully resolved data for the query."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"error: null | TError"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"null")),(0,r.kt)("li",{parentName:"ul"},"The error object for the query, if an error was thrown."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isError: boolean"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A derived boolean from the ",(0,r.kt)("inlineCode",{parentName:"li"},"status")," variable, provided for convenience."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"refetch: (options: { throwOnError: boolean, cancelRefetch: boolean }) => Promise<UseQueryResult>"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A function to manually refetch the query."),(0,r.kt)("li",{parentName:"ul"},"If the query errors, the error will only be logged. If you want an error to be thrown, pass the ",(0,r.kt)("inlineCode",{parentName:"li"},"throwOnError: true")," option"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cancelRefetch?: boolean"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Per default, a currently running request will be cancelled before a new request is made"))),(0,r.kt)("li",{parentName:"ul"},"When set to ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),", no refetch will be made if there is already a request running."))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"isFetching: boolean"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A derived boolean from the ",(0,r.kt)("inlineCode",{parentName:"li"},"fetchStatus")," variable, provided for convenience.")))))}c.isMDXComponent=!0}}]);