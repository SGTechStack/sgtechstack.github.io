"use strict";(self.webpackChunkeds_library_documentation=self.webpackChunkeds_library_documentation||[]).push([[917],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9390:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2},i="Tutorial",l={unversionedId:"packages/pagination/tutorial",id:"packages/pagination/tutorial",title:"Tutorial",description:"To incorporate the Pagination-Query React library into your project, follow the steps below:",source:"@site/docs/packages/pagination/tutorial.md",sourceDirName:"packages/pagination",slug:"/packages/pagination/tutorial",permalink:"/docs/packages/pagination/tutorial",draft:!1,editUrl:"https://github.com/SGTechStack/sgtechstack.github.io/tree/source/eds-library-documentation/docs/packages/pagination/tutorial.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/packages/pagination/introduction"},next:{title:"Examples",permalink:"/docs/packages/pagination/examples"}},p={},s=[{value:"Backend Configuration",id:"backend-configuration",level:2},{value:"How To Use",id:"how-to-use",level:2}],c={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tutorial"},"Tutorial"),(0,a.kt)("p",null,"To incorporate the Pagination-Query React library into your project, follow the steps below:"),(0,a.kt)("h2",{id:"backend-configuration"},"Backend Configuration"),(0,a.kt)("p",null,"For the backend setup, we recommend using Spring Boot with the Spring Data REST library. Configure it as follows to generate the desired URL format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import org.springframework.data.repository.PagingAndSortingRepository;\nimport org.springframework.data.rest.core.annotation.RepositoryRestResource;\n\n@RepositoryRestResource(collectionResourceRel = "records", path = "records")\npublic interface RecordsRepository extends PagingAndSortingRepository<Record, Long> {\n    // Additional custom query methods can be defined here if needed\n}\n')),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a repository interface that extends ",(0,a.kt)("inlineCode",{parentName:"p"},"PagingAndSortingRepository"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Annotate the repository with ",(0,a.kt)("inlineCode",{parentName:"p"},"@RepositoryRestResource")," and provide the desired ",(0,a.kt)("inlineCode",{parentName:"p"},"collectionResourceRel")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"path"),' values. In this example, we use "records" for both.')),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"With this configuration, Spring Data REST will automatically generate the expected URL format: ",(0,a.kt)("inlineCode",{parentName:"p"},"http://localhost:8080/records{?page,size,sort}")))),(0,a.kt)("admonition",{title:"custom backend configuration",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You can use the hooks as long as you configure the URL with the following params:"),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"page"),": page number to access"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"size"),": page size requested"))),(0,a.kt)("h2",{id:"how-to-use"},"How To Use"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"In ",(0,a.kt)("inlineCode",{parentName:"li"},"App.tsx"),", use the ",(0,a.kt)("inlineCode",{parentName:"li"},"QueryClientProvider")," component from ",(0,a.kt)("inlineCode",{parentName:"li"},"@tanstack/react-query")," to connect and provide a ",(0,a.kt)("inlineCode",{parentName:"li"},"QueryClient")," to your application:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { QueryClient, QueryClientProvider } from '@tanstack/react-query'\n\nconst queryClient = new QueryClient()\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n        // Render your React Components here\n    </QueryClientProvider>\n  )\n}\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Create a ",(0,a.kt)("inlineCode",{parentName:"li"},".env")," file in your root directory and configure the baseurl and timeout duration for the backend query as follows:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'REACT_APP_BASE_URL="http://localhost:8080" // Required\nREACT_APP_TIMEOUT="5000" // Optional\n')),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Define the API endpoint path and configure the query parameters. For example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const queryConfig = {\n    url: 'records',\n    page: 0,\n    size: 10,\n    sort: 'age,asc',\n    staleTime: 5000,\n    gcTime: 5000\n};\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Configure the ",(0,a.kt)("inlineCode",{parentName:"p"},"page")," parameter with a ",(0,a.kt)("inlineCode",{parentName:"p"},"state")," variable to update the query parameters as needed to load the next page of results")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Use the ",(0,a.kt)("inlineCode",{parentName:"li"},"usePaginationQuery")," hook to fetch paginated data from the backend:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { \n    isLoading,\n    isError,\n    isSuccess,\n    status,\n    error,\n    data,\n    refetch,\n    isFetching \n} = usePaginationQuery<T>(\n    queryConfig,\n    axiosConfig // Define your request configuration here\n);\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Render the fetched data in your React components:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"if (isLoading) \n    return <div>Loading...</div>\n\nif (isError && error instanceof Error) \n    return <div>Error: {error.message}</div>\n\nif (data)\n    return (\n        // Render the fetched data here\n    );\n")))}d.isMDXComponent=!0}}]);