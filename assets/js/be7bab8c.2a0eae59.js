"use strict";(self.webpackChunkeds_library_documentation=self.webpackChunkeds_library_documentation||[]).push([[394],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),g=a,m=u["".concat(p,".").concat(g)]||u[g]||d[g]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8786:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2},i="Usage",s={unversionedId:"packages/pagination/usage",id:"packages/pagination/usage",title:"Usage",description:"To incorporate the Pagination-Query React library into your project, follow the steps below:",source:"@site/docs/packages/pagination/usage.md",sourceDirName:"packages/pagination",slug:"/packages/pagination/usage",permalink:"/docs/packages/pagination/usage",draft:!1,editUrl:"https://github.com/SGTechStack/sgtechstack.github.io/tree/source/eds-library-documentation/docs/packages/pagination/usage.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/packages/pagination/introduction"},next:{title:"Examples",permalink:"/docs/packages/pagination/examples"}},p={},l=[{value:"Importing the library",id:"importing-the-library",level:2},{value:"Backend Configuration",id:"backend-configuration",level:2},{value:"Hooks",id:"hooks",level:2}],c={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"usage"},"Usage"),(0,a.kt)("p",null,"To incorporate the Pagination-Query React library into your project, follow the steps below:"),(0,a.kt)("h2",{id:"importing-the-library"},"Importing the library"),(0,a.kt)("p",null,"Import the ",(0,a.kt)("inlineCode",{parentName:"p"},"usePaginationQuery")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"useInfinitePaginationQuery")," functions from the ",(0,a.kt)("inlineCode",{parentName:"p"},"@eds-component/pagination-query"),"library:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"import { usePaginationQuery, useInfinitePaginationQuery } from '@eds-component/pagination-query'\n")),(0,a.kt)("h2",{id:"backend-configuration"},"Backend Configuration"),(0,a.kt)("p",null,"For the backend setup, we recommend using Spring Boot with the Spring Data REST library. Configure it as follows to generate the desired URL format:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a repository interface that extends ",(0,a.kt)("inlineCode",{parentName:"li"},"PagingAndSortingRepository"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'import org.springframework.data.repository.PagingAndSortingRepository;\nimport org.springframework.data.rest.core.annotation.RepositoryRestResource;\n\n@RepositoryRestResource(collectionResourceRel = "records", path = "records")\npublic interface RecordsRepository extends PagingAndSortingRepository<Record, Long> {\n    // Additional custom query methods can be defined here if needed\n}\n')),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Annotate the repository with ",(0,a.kt)("inlineCode",{parentName:"p"},"@RepositoryRestResource")," and provide the desired ",(0,a.kt)("inlineCode",{parentName:"p"},"collectionResourceRel")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"path"),' values. In this example, we use "records" for both.')),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"With this configuration, Spring Data REST will automatically generate the expected URL format. For instance, the URL ",(0,a.kt)("inlineCode",{parentName:"p"},"http://localhost:8080/records?page=0&size=2&sort=age,asc")," will retrieve the first page of records, sorted by the age field in ascending order."))),(0,a.kt)("h2",{id:"hooks"},"Hooks"),(0,a.kt)("p",null,"The library offers two essential hooks: ",(0,a.kt)("inlineCode",{parentName:"p"},"usePaginationQuery")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"useInfinitePaginationQuery"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"useInfinitePaginationQuery")," hook specifically targets infinite scroll pagination.x"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Define the API endpoint path and configure the query parameters. For example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"const queryConfig = {\n    url: 'records',\n    page: 0,\n    size: 10,\n    sort: \"age,asc\",\n    staleTime: 5000,\n    gcTime: 5000\n};\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Use the ",(0,a.kt)("inlineCode",{parentName:"li"},"usePaginationQuery")," hook to fetch paginated data from the backend:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"const { isLoading,\n        isError,\n        isSuccess,\n        status,\n        error,\n        data,\n        refetch,\n        isFetching \n} = usePaginationQuery<T>(queryConfig, axiosConfig);\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Render the fetched data in your React components:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"if (isLoading) \n    return <div>Loading...</div>\n\nif (isError && error instanceof Error) \n    return <div>Error: {error.message}</div>\n\nif (data)\n    return (\n        // Render the fetched data here\n    );\n\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Update the query parameters as needed to load the next page of results")))}d.isMDXComponent=!0}}]);